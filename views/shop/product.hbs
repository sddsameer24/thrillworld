<div class="product">
    <input type="hidden" id="one" name="one" value="{{this.user}}" /> {{#each product}}
    <div class="container">
        <div class="card">
            <h2 class="p-0 m-0" style="text-align:center" ; id="product-title">{{this.name}}</h2>
            <p> </p>
            <p></p>
            <p> </p>
            <p></p>
            <div class="card-body row">
                <div class="col-sm-12 col-md-6" id="image-container">
                    <div id="main-img">
                        <main class="primary" style="background-image:url({{this.imagePath}})" class="mx-auto"></main>
                    </div>
                    <div class="container-fluid">
                        <div class="row mx-auto" id="thumbnail-container">
                            <a href="#" class="thumbnail selected" data-big="{{this.imagePathg1}}">
                                <div class="thumb" style="background-image:url({{this.imagePathg1}}); background-size:cover;">

                                </div>
                            </a>
                            <a href="#" class="thumbnail" data-big="{{this.imagePathg2}}">
                                <div class="thumb" style="background-image:url({{this.imagePathg2}}); background-size:cover;">
                                </div>
                            </a>
                            <a href="#" class="thumbnail" data-big="{{this.imagePathg3}}">
                                <div class="thumb" style="background-image:url({{this.imagePathg3}}); background-size:cover;">
                                </div>
                            </a>
                        </div>
                    </div>
                    <span id="favorite-button" class="btn">
                        <div class="text-left">
                            {{#if ../../isLoggedIn}}
                            <a href="/like/{{this._id}}" data-toggle="tooltip" title="{{this.likes.length}} likes" class="btn btn-default btn-small">
                                <i class="fa fa-heart"></i> {{ this.likes.length }}</a>
                            {{else}}
                            <i class="fa fa-heart"></i> {{ this.likes.length }} {{/if}}
                            <script>
                                $(document).ready(function () {
                                    $('[data-toggle="tooltip"]').tooltip();
                                });
                            </script>
                        </div>
                    </span>
                </div>

                <div class="col-sm-12 col-md-6" id="product-information">


                    <span id="product-short">
                        <small>{{this.description}}</small>
                    </span>
                    <div class="container-fluid">
                        <div class="row">
                            <span id="old-price" class="text-danger">
                                <strike></strike>
                            </span> &nbsp; &nbsp;
                            <p>Price Per Person : Rs
                                <span id="ticket_price">{{money this.price}}</span>
                            </p>
                        </div>
                    </div>
                    <span class="align-middle">
                        <label for="subscribe-btn">Read all terms and conditions</label>
                        <input type="checkbox" id="subscribe-btn"> &nbsp;
                    </span>
                    <div id="text">
                        <ul>
                            <li>policy statement</li>
                            <li>Confirmation Policy</li>
                            <li>Cancellation Policy</li>
                            <li>Refund Policy</li>
                        </ul>

                    </div>
                    <form action='/add-to-cart' method='POST'>
                        <input type='hidden' id='id' name='productId' value='{{ this._id }}'>

                        <h3 class="product-price text-center">
                            <input type='hidden' class='text-right' name='price' value='{{this.price}}'>
                        </h3>

                        <input type="hidden" id="two" name="userid" />
                        <div class="row">
                            <div class="col-md-6" id="arrival">
                                <label>Date of arrival</label>
                                <input type="date" name="arrival"> &nbsp;
                            </div>
                            <div class="col-md-6" id="depart">
                                <label>Date of depart</label>
                                <input type="date" name="depart"> &nbsp;
                            </div>
                        </div>
                        <script>
                            function calc() {
                                var children = 0;
                                var adults = document.getElementById("adult").value;
                                var children = document.getElementById("children").value;
                                var price = document.getElementById("ticket_price").innerHTML;
                                var noTickets = parseFloat(adults) + parseFloat(children);
                                var total = parseFloat(price) * noTickets;
                                if (!isNaN(total))
                                    document.getElementById("total").innerHTML = total
                            }
                        </script>
                        <div class="row">
                            <div class="col-md-4" id="arrival">
                                <label>Number of Adult</label>
                                <input type="number" id="adult" oninput="calc()" name="adult">
                            </div>

                            <div class="col-md-4" id="depart">
                                <label>Number of Children</label>
                                <input type="number" id="children" oninput="calc()" name="children">
                            </div>
                            <div class="col-md-4" id="depart">
                                <label>Kids below 5</label>
                                <input type="number" name="kids" data-toggle="tooltip" data-placement="top" title="Its free but we do need count">
                            </div>

                        </div>


                        <h2>
                            <p>Subtotal :
                                <b>Rs
                                    <span id="total" name="subtotal" class="user-location"></span>
                                </b>
                            </p>
                        </h2>


                        <p class="text-center">
                            <input type='submit' value='Add to Cart' class="btn btn-primary add-to-cart" role="button">
                        </p>
                    </form>


                </div>
                {{!--
                <input type='submit' href="/add-to-cart" class="btn btn-primary add-to-cart" role="button"> --}}
            </div>
        </div>


    </div>
    <script>
        function myMap() {
            var myCenter = new google.maps.LatLng({{ this.Latitude }}, { { this.Longitude } });
        var mapCanvas = document.getElementById("map");
        var mapOptions = { center: myCenter, zoom: 5 };
        var map = new google.maps.Map(mapCanvas, mapOptions);
        var marker = new google.maps.Marker({ position: myCenter });
        marker.setMap(map);
        var infowindow = new google.maps.InfoWindow({
            content: "{{this.title}}"
        });
        infowindow.open(map, marker);
}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAidN5MszkfMW2VYcES7uoePsX1qQmuG7M&callback=myMap"></script>
    <!-- end card -->
</div>
<!-- end container-->
{{/each}}


<div>
    {{#each reviews}}
    <div class="scone">
        <div>
            <div class="scone__icing">
                <div class="scone__media">
                    <img src="https://www.accountingweb.co.uk/sites/default/files/styles/response_avatar/public/picture-190538-1318866062.jpg?itok=KyQrsQYG"
                        alt="" class="imagescone">
                </div>
                <div class="scone__jam">
                    <div class="scone__name">{{this.user}}</div>
                    <div class="scone__date">{{this.created}}</div>
                </div>
            </div>
            {{!--
            <div class="rate">
                {{#if this.rating "1"}}
                <i class="fa fa-star"></i>
                <i class="fa fa-star fa-semi-opacity"></i>
                <i class="fa fa-star fa-star-faded"></i>
                <i class="fa fa-star fa-semi-opacity"></i>
                <i class="fa fa-star fa-star-faded"></i>
                {{/if}} {{#if this.rating "2"}}
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star fa-star-faded"></i>
                <i class="fa fa-star fa-semi-opacity"></i>
                <i class="fa fa-star fa-star-faded"></i>
                {{/if}} {{#if this.rating "3"}}
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star fa-semi-opacity"></i>
                <i class="fa fa-star fa-star-faded"></i>
                {{/if}} {{#if this.rating "4"}}
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star fa-semi-opacity"></i>
                <i class="fa fa-star fa-star-faded"></i>
                {{/if}} {{#if this.rating "5"}}
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star fa-star-faded"></i>
                {{/if}}
            </div>
        </div> --}}
        <div class="scone__cream">
            <h3 class="scone__title">{{this.review}}</h3>
            <div class="scone__body">It definitely feels like we get good bang for our buck. There aren't any hidden costs either which is always
                nice!
            </div>
        </div>
    </div>
    {{/each}}
    <form action='/reviews' method='POST'>
        <input type='hidden' id='type' name='name' value='{{this.user.first_name}} {{this.user.last_name}}'> {{#each product}}
        <input type='hidden' id='name' name='clone' value='{{ this._id }}'> {{/each}}
        <input type='hidden' id='firstname' name='productid'>
        <input type='number' name='rating' value=''>
        <input type='text' name='review' value=''>
        <input type='submit' value='submit' class="btn btn-primary add-to-cart" role="button">
    </form>
</div>
<script>

    $(window).load(function () {
        $('#name').change(function () {
            $('#firstname').val($(this).val());
        });

    });
    window.onload = function () {
        document.getElementById("firstname").value = document.getElementById("name").value;
        document.getElementById('two').value = document.getElementById('one').value;
    }

</script>

</div>
<div class=”container”>
    <br>
    <div class=”jumbotron”>
        <h1 class="display-4">Send Message</h1>
        <br>
        <input id=“ name” class=”form-control” placeholder=”Name”>
        <br>
        <textarea id=“ message” class=”form-control” placeholder=”Your Message Here”>
</textarea>
        <br>
        <button id=”send” class=”btn btn-success”>Send</button>
    </div>
    <div id=”messages”>
    </div>
</div>
<script>
    var socket = io();
    $(() => {
        $("#send").click(() => {
            sendMessage({ name: $("#name").val(), message: $("#message").val() });
        })
        getMessages()
    })
    socket.on('message', addMessages)
    function addMessages(message) {
        $("#messages").append(`<h4> ${message.name} </h4> <p> ${message.message} </p>`)
    }
    function getMessages() {
        $.get('http://localhost:3000/messages', (data) => {
            data.forEach(addMessages);
        })
    }
    function sendMessage(message) {
        $.post('http://localhost:3000/messages', message)
    }
</script>
<style>
    .scone {
        border: 0;
        background-color: $bg-main;
        width: 100%;
        display: flex;
        flex-direction: row;
        font-family: $fonts;
        height: 100%;
        padding: 2rem 0;
    }

    .scone__media {
        padding: 0.875rem 0.875rem 0 0;
    }

    .imagescone {
        // same styles as comment avatars
        min-width: 2.25rem;
        border-radius: 50%;
    }

    .scone__title {
        font-size: 1.25rem;
        padding-bottom: 0.5rem;
    }

    .scone__body {
        font-size: 1.0625rem;
        line-height: 2rem;
        color: #343434;
    }

    .rate {
        font-size: 1.25rem;
        color: #262626;
    }

    .fa-star {
        color: #F5A623;
    }

    .fa-star-faded {
        color: #F1961C;
        opacity: 0.4;
    }

    .fa-semi-opacity:before {
        background: linear-gradient(to right, rgba(245, 166, 35, 1) 50%, rgba(241, 231, 103, 1) 50%, rgba(251, 216, 158, 1) 50%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        display: initial;
        /* reset Font Awesome's display:inline-block */
    }

    .scone__name {
        font-size: 0.9375rem;
        font-weight: bold;
    }

    .scone__date {
        font-size: 0.8125rem;
        color: #7492A5;
    }

    .scone__size {
        font-size: 1.0625rem;
        color: #134370;
    }

    .scone__icing {
        display: flex;
        flex: 1;
    }

    .scone__jam {
        padding: 0.875rem 0;
    }

    .scone__cream {
        padding: 0.875rem;
        flex: 2;
    }



    button:active,
    #favorite-button:active,
    .btn:active {
        transform: translateY(3px);
        transition: 0.15s;
    }

    button,
    input~button,
    input+button,
    select,
    .btn,
    input[type="checkbox"],
    label[for=subscribe-btn] {
        cursor: pointer;
    }

    .card {
        background: #fff;
        width: 100%;
    }

    .card>#image-container {
        position: relative;
    }

    .card #image-container #main-img {
        height: 300px;
    }

    .card #image-container main.primary {
        margin: 0 auto;
        display: block;
        width: 60%;
        height: auto;
        min-height: 300px;
        background-size: cover;
    }

    .card #image-container #thumbnail-container {
        margin-top: 5px;
        display: flex;
        justify-content: center;
    }

    .card #image-container #thumbnail-container div.thumb {
        width: 99px;
        height: 75px;
        margin: 5px;
        border: 1px solid rgba(0, 0, 0, 0.25);
        box-sizing: border-box;
    }

    .card #image-container #thumbnail-container div.thumb:hover {
        transform: scale(0.9);
        transition: 0.3s;
        transition-timing-function: ease-in;
    }

    .card #image-container span#favorite-button {
        color: rgba(231, 76, 60, 0.5);
        font-family: "Font Awesome 5 Free";
        font-size: 1.5em;
        content: "\f004";
        position: absolute;
        top: 15px;
        right: 4vw;
        background: #fff;
        border: 1px solid rgba(0, 0, 0, 0.25);
        border-radius: 50%;
        padding-top: 7px;
        height: 50px;
        width: 50px;
        text-align: center;
        box-shadow: 0px 1px 40px 0px rgba(0, 0, 0, 0.25);
        ;
    }

    .card #image-container span#favorite-button:hover,
    .card #image-container span#favorite-button.active {
        color: rgba(231, 76, 60, 1);
        transition-timing-function: ease-in-out;
        transition: 0.3s;
    }

    .card #product-information #product-short {
        text-transform: uppercase;
        color: #777;
    }

    .card #product-information label {
        font-weight: bold;
        margin-top: 8px;
        margin-bottom: 0;
    }

    .card #product-information select {
        max-width: 18vw;
    }


    .card .nice-number {
        display: inline-flex;
        justify-content: stretch;
    }

    .card .nice-number button {
        background: #27ae60;
        color: #fff;
        width: 3vw;
        min-width: 35px;
        border: 0;
    }

    .card .nice-number input {
        width: 3.5vw;
        min-width: 50px;
        height: 40px;
        vertical-align: middle;
        -moz-appearance: textfield;
        box-sizing: content-box;
        margin: 0;
        text-align: center;
    }

    .card .nice-number+button {
        background: #27ae60;
        color: #fff;
        width: 13vw;
        border: 0;
        margin-left: 2px;
        padding-top: 10.5px;
        padding-bottom: 11px;
        transition: 0.35s;
    }

    .card .nice-number button:hover,
    .card .nice-number+button:hover {
        background: #1e8449;
        transition: 0.25s;
    }

    .disabled,
    .thumbnail.selected,
    .thumbnail.selected:hover {
        opacity: 0.6;
        cursor: none;
    }

    .nice-number input::-webkit-inner-spin-button,
    .nice-number input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .card .nice-number+button.success {
        border-radius: 10px;
        background-color: orange;
        transition: 0.2s;
        float: none;
    }

    /*FOR MOBILE*/

    @media only screen and (max-width:992px) {
        .card #image-container main.primary {
            width: 80%;
            max-height: 300px;
        }
    }

    @media only screen and (max-width:767px) {
        .card #image-container main.primary {
            width: 65%;
            max-height: 300px;
        }

        .card #image-container #thumbnail-container {
            margin-bottom: 5px;
        }

        .card #image-container #thumbnail-container div.thumb {
            width: 25px;
            height: 25px;
        }


        .card .nice-number button {
            width: 7vw !important;
        }

        .card .nice-number+button.add-to-cart {
            width: 33vw !important;
            min-width: 50%;
            float: right;
        }

        .card #product-information #product-title,
        .card #product-information #product-short {
            text-align: center;
            display: block;
        }

        div#product-variables {
            max-width: 100%;
            margin: 0 auto;
        }

        .card #product-information select {
            min-width: 100%;
        }
    }

    @media only screen and (max-width: 575px) {
        .card #image-container main.primary {
            width: 60% !important;
            max-height: 300px !important;
        }
    }

    @media only screen and (max-width:375px) {
        body~container {
            padding: 0;
        }

        .card #image-container main.primary {
            width: 90% !important;
            max-height: 150px !important;
        }

        div#product-variables {
            max-width: 90% !important;
            margin: 0 auto;
        }
        .card .nice-number {
            min-width: 100%;
        }

        .card .nice-number button,
        .card .nice-number input {
            width: 33.33% !important;
            margin-bottom: 5px;
        }

        .card .nice-number+button.add-to-cart {
            min-width: 100%;
        }
    }
</style>
<script>
    (function ($) {
        $.fn.niceNumber = function (options) {
            var settings = $.extend({
                autoSize: false,
                autoSizeBuffer: 1,
                buttonDecrement: '-',
                buttonIncrement: "+",
                buttonPosition: 'around'
            }, options);

            return this.each(function () {
                var currentInput = this,
                    $currentInput = $(currentInput),
                    attrMax = 999,
                    attrMin = 0;

                // Handle max and min values
                if (
                    typeof $currentInput.attr('max') !== typeof undefined
                    && $currentInput.attr('max') !== false
                ) {
                    attrMax = parseFloat($currentInput.attr('max'));
                }

                if (
                    typeof $currentInput.attr('min') !== typeof undefined
                    && $currentInput.attr('min') !== false
                ) {
                    attrMin = parseFloat($currentInput.attr('min'));
                }

                // Fix issue with initial value being < min
                if (
                    attrMin
                    && !currentInput.value
                ) {
                    $currentInput.val(attrMin);
                }

                // Generate container
                var $inputContainer = $('<div/>', {
                    class: 'nice-number'
                })
                    .insertAfter(currentInput);

                // Generate interval (object so it is passed by reference)
                var interval = {};

                // Generate buttons
                var $minusButton = $('<button/>')
                    .attr('type', 'button')
                    .html(settings.buttonDecrement)
                    .on('mousedown mouseup mouseleave', function (event) {
                        changeInterval(event.type, interval, function () {
                            if (
                                attrMin == null
                                || attrMin < parseFloat(currentInput.value)
                            ) {
                                currentInput.value--;
                            }
                        });

                        // Trigger the input event here to avoid event spam
                        if (
                            event.type == 'mouseup'
                            || event.type == 'mouseleave'
                        ) {
                            $currentInput.trigger('input');
                        }
                    });

                var $plusButton = $('<button/>')
                    .attr('type', 'button')
                    .html(settings.buttonIncrement)
                    .on('mousedown mouseup mouseleave', function (event) {
                        changeInterval(event.type, interval, function () {
                            if (
                                attrMax == null
                                || attrMax > parseFloat(currentInput.value)
                            ) {
                                currentInput.value++;
                            }
                        });

                        // Trigger the input event here to avoid event spam
                        if (
                            event.type == 'mouseup'
                            || event.type == 'mouseleave'
                        ) {
                            $currentInput.trigger('input');
                        }
                    });

                // Append elements
                switch (settings.buttonPosition) {
                    case 'left':
                        $minusButton.appendTo($inputContainer);
                        $plusButton.appendTo($inputContainer);
                        $currentInput.appendTo($inputContainer);
                        break;
                    case 'right':
                        $currentInput.appendTo($inputContainer);
                        $minusButton.appendTo($inputContainer);
                        $plusButton.appendTo($inputContainer);
                        break;
                    case 'around':
                    default:
                        $minusButton.appendTo($inputContainer);
                        $currentInput.appendTo($inputContainer);
                        $plusButton.appendTo($inputContainer);
                        break;
                }

                // Nicely size input
                if (settings.autoSize) {
                    $currentInput.width(
                        $currentInput.val().length + settings.autoSizeBuffer + "ch"
                    );
                    $currentInput.on('keyup input', function () {
                        $currentInput.animate({
                            'width': $currentInput.val().length + settings.autoSizeBuffer + "ch"
                        }, 200);
                    });
                }
            });
        };

        function changeInterval(eventType, interval, callback) {
            if (eventType == "mousedown") {
                interval.timeout = setTimeout(function () {
                    interval.actualInterval = setInterval(function () {
                        callback();
                    }, 100);
                }, 200);
                callback();
            } else {
                if (interval.timeout) {
                    clearTimeout(interval.timeout);
                }
                if (interval.actualInterval) {
                    clearInterval(interval.actualInterval);
                }
            }
        }
    }(jQuery));

    $('input#add-to-cart-qty').niceNumber();

    $('input#add-to-cart-qty').keydown(function (e) {
        if (e.keyCode == 190 || e.keyCode == 110 || e.keyCode == 69 || e.keyCode == 189 || e.keyCode == 109) {
            e.preventDefault();
        }

        if (isNaN(parseInt(window.getSelection()))) {
            var code = (e.keyCode >= 96) ? e.keyCode - 48 : e.keyCode;
            var keyval = parseInt(String.fromCharCode(code));

            if (!isNaN(keyval)) {
                if ($(this).val() + keyval > parseInt($(this).attr('max'))) {
                    e.preventDefault();
                }
            }
        }
    });
    $('input#add-to-cart-qty').keyup(function (e) {
        if ($(this).val() != '') {
            $(this).val(parseInt($(this).val()));
        }
    });
    // ------------- //


    $('#text').hide();

    $('#subscribe-btn').change(function () {
        // use the :checked selector to find any that are checked
        if ($("#subscribe-btn").is(':checked')) {
            $('#text').slideDown();
        } else {
            $('#text').slideUp();
        }
    });

    /* Images */
    $('.thumbnail').on('click', function () {
        var clicked = $(this);
        var newSelection = clicked.data('big');
        var $img = $('.primary').css("background-image", "url(" + newSelection + ")");
        clicked.parent().find('.thumbnail').removeClass('selected');
        clicked.addClass('selected');
        $('.primary').empty().append($img.hide().fadeIn(500));
        return false;
    });




    $('button.add-to-cart').on('click', function () {
        var cartBtn = $(this);
        cartBtn.addClass('success').text("Success!").attr('disabled', true);
        setTimeout(function () { cartBtn.removeClass('success').addClass('active').text("Add to Cart").attr('disabled', false); }, 1500);
    });


    $('#favorite-button').on('click', function () {
        $(this).toggleClass('active');
    })
</script>